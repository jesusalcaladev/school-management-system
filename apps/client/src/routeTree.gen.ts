/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SessionsImport } from './routes/sessions'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as StudentIndexImport } from './routes/student/index'
import { Route as StudentCreateImport } from './routes/student/create'

// Create/Update Routes

const SessionsRoute = SessionsImport.update({
  id: '/sessions',
  path: '/sessions',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StudentIndexRoute = StudentIndexImport.update({
  id: '/student/',
  path: '/student/',
  getParentRoute: () => rootRoute,
} as any)

const StudentCreateRoute = StudentCreateImport.update({
  id: '/student/create',
  path: '/student/create',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/sessions': {
      id: '/sessions'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof SessionsImport
      parentRoute: typeof rootRoute
    }
    '/student/create': {
      id: '/student/create'
      path: '/student/create'
      fullPath: '/student/create'
      preLoaderRoute: typeof StudentCreateImport
      parentRoute: typeof rootRoute
    }
    '/student/': {
      id: '/student/'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/sessions': typeof SessionsRoute
  '/student/create': typeof StudentCreateRoute
  '/student': typeof StudentIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/sessions': typeof SessionsRoute
  '/student/create': typeof StudentCreateRoute
  '/student': typeof StudentIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/sessions': typeof SessionsRoute
  '/student/create': typeof StudentCreateRoute
  '/student/': typeof StudentIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/sessions'
    | '/student/create'
    | '/student'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/login' | '/sessions' | '/student/create' | '/student'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/login'
    | '/sessions'
    | '/student/create'
    | '/student/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  SessionsRoute: typeof SessionsRoute
  StudentCreateRoute: typeof StudentCreateRoute
  StudentIndexRoute: typeof StudentIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  SessionsRoute: SessionsRoute,
  StudentCreateRoute: StudentCreateRoute,
  StudentIndexRoute: StudentIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/login",
        "/sessions",
        "/student/create",
        "/student/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/sessions": {
      "filePath": "sessions.tsx"
    },
    "/student/create": {
      "filePath": "student/create.tsx"
    },
    "/student/": {
      "filePath": "student/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
